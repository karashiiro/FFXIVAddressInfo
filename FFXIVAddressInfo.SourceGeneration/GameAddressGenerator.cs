using System.Collections.Immutable;
using System.Net;
using Microsoft.CodeAnalysis;

namespace FFXIVAddressInfo.SourceGeneration;

[Generator(LanguageNames.CSharp)]
internal sealed class GameAddressGenerator : ISourceGenerator
{
    private IReadOnlyDictionary<string, DataCenterInfo>
        _addressInfo = ImmutableDictionary<string, DataCenterInfo>.Empty;

    public void Initialize(GeneratorInitializationContext context)
    {
        _addressInfo = XivUp.GetDataCenterInfo().Result;
    }

    public void Execute(GeneratorExecutionContext context)
    {
        var infoInit = string.Join("\n\n", _addressInfo.Values.Select(RenderDataCenterInfo).Select(c => $"    {c}"));

        //lang=c#
        var addressInfoCode = $$"""
                                // <auto-generated />
                                namespace FFXIVAddressInfo;

                                [global::System.CodeDom.Compiler.GeneratedCodeAttribute("{{ToolInfo.AssemblyName}}", "{{ToolInfo.AssemblyVersion}}")]
                                public sealed partial class DataCenters
                                {
                                {{infoInit}}
                                }
                                """;

        context.AddSource("FFXIVAddressInfo.GameAddresses.GameAddresses.g.cs", addressInfoCode);
    }

    private static string RenderDataCenterInfo(DataCenterInfo info)
    {
        //lang=c#
        return
            $"""
             public static readonly global::FFXIVAddressInfo.IDataCenterAddresses {info.Name} =
                     new global::FFXIVAddressInfo.DataCenterInfo("{info.LobbyServer}", {RenderServerAddresses(info.Addresses)});
             """;
    }

    private static string RenderServerAddresses(IEnumerable<IPAddress> addresses)
    {
        var addressInit = string.Join(", ",
                              addresses.Select(addr =>
                                  "\n            " + $"""global::System.Net.IPAddress.Parse("{addr}")""")) +
                          "\n        ";

        //lang=c#
        return $"new global::System.Net.IPAddress[] {{{addressInit}}}";
    }
}